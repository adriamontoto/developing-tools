name: Lint Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
    types: [opened, synchronize]

jobs:
  lint:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: [3.13]

    name: Lint Pipeline - Python ${{ matrix.python-version }} on ${{ matrix.os }}
    timeout-minutes: 10
    steps:
      - name: 📥 Checkout the repository
        uses: actions/checkout@v4.2.2

      - name: 🐍 Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.5.0
        with:
          python-version: ${{ matrix.python-version }}

      - id: cache
        name: 📦 Create cache
        uses: actions/cache@v4.2.3
        with:
          path: ${{ env.pythonLocation }}
          key: ${{ matrix.os }}-python-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml', 'requirements*') }}
          restore-keys: ${{ matrix.os }}-python-${{ matrix.python-version }}-

      - name: 📦 Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: make install-dev

      - name: 🏃 Run Linter
        run: make lint

      - name: 🫙 Store type coverage
        uses: actions/upload-artifact@v4.6.0
        if: always()
        with:
          name: type_coverage_report_${{ matrix.os }}_${{ matrix.python-version }}
          path: index.txt
